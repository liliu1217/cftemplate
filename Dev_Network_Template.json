{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "CloudFormation template to create development Network resources",

  "Parameters" : {

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "BastionInstanceType" : {
      "Description" : "Bastion instance type",
      "Type" : "String",
      "Default" : "t1.micro",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large"],
      "ConstraintDescription" : "must be a valid and allowed EC2 instance type."
    },

    "NATInstanceType" : {
      "Description" : "NAT instance type",
      "Type" : "String",
      "Default" : "t1.micro",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large"],
      "ConstraintDescription" : "must be a valid and allowed EC2 instance type."
    },
    "ManagementStackName": {
      "Description" : "Name of an existing Management stack",
      "Type": "String",
      "ConstraintDescription" : "The name of management VPC in this account"
    }
  },

  "Mappings" : {

    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.nano"     : { "Arch" : "HVM64"  },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "t2.large"    : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.large"    : { "Arch" : "HVM64"  },
      "m4.xlarge"   : { "Arch" : "HVM64"  },
      "m4.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.4xlarge"  : { "Arch" : "HVM64"  },
      "m4.10xlarge" : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "c4.large"    : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.2xlarge"  : { "Arch" : "HVM64"  },
      "c4.4xlarge"  : { "Arch" : "HVM64"  },
      "c4.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "g2.8xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "d2.xlarge"   : { "Arch" : "HVM64"  },
      "d2.2xlarge"  : { "Arch" : "HVM64"  },
      "d2.4xlarge"  : { "Arch" : "HVM64"  },
      "d2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "PV64" : "ami-50842d38", "HVM64" : "ami-08842d60", "HVMG2" : "ami-3a329952"  },
      "us-west-2"      : { "PV64" : "ami-af86c69f", "HVM64" : "ami-8786c6b7", "HVMG2" : "ami-47296a77"  },
      "us-west-1"      : { "PV64" : "ami-c7a8a182", "HVM64" : "ami-cfa8a18a", "HVMG2" : "ami-331b1376"  },
      "eu-west-1"      : { "PV64" : "ami-aa8f28dd", "HVM64" : "ami-748e2903", "HVMG2" : "ami-00913777"  },
      "ap-southeast-1" : { "PV64" : "ami-20e1c572", "HVM64" : "ami-d6e1c584", "HVMG2" : "ami-fabe9aa8"  },
      "ap-northeast-1" : { "PV64" : "ami-21072820", "HVM64" : "ami-35072834", "HVMG2" : "ami-5dd1ff5c"  },
      "ap-southeast-2" : { "PV64" : "ami-8b4724b1", "HVM64" : "ami-fd4724c7", "HVMG2" : "ami-e98ae9d3"  },
      "sa-east-1"      : { "PV64" : "ami-9d6cc680", "HVM64" : "ami-956cc688", "HVMG2" : "NOT_SUPPORTED" },
      "cn-north-1"     : { "PV64" : "ami-a857c591", "HVM64" : "ami-ac57c595", "HVMG2" : "NOT_SUPPORTED" },
      "eu-central-1"   : { "PV64" : "ami-a03503bd", "HVM64" : "ami-b43503a9", "HVMG2" : "ami-b03503ad"  }
    },

    "AWSNATAMI" : {
      "us-east-1"      : { "AMI" : "ami-c6699baf" },
      "us-west-2"      : { "AMI" : "ami-52ff7262" },
      "us-west-1"      : { "AMI" : "ami-3bcc9e7e" },
      "eu-west-1"      : { "AMI" : "ami-0b5b6c7f" },
      "ap-southeast-1" : { "AMI" : "ami-02eb9350" },
      "ap-southeast-2" : { "AMI" : "ami-ab990e91" },
      "ap-northeast-1" : { "AMI" : "ami-14d86d15" },
      "sa-east-1"      : { "AMI" : "ami-0439e619" }
    },

    "CIDRBlocks" : {
      "LLDAWS"     		    : { "CIDR" : "172.27.0.0/16" },
      "LLDProdEnv"			: { "CIDR" : "172.27.0.0/20" },
	  "LLDProdWLSubnetZA"	: { "CIDR" : "172.27.0.0/24" },
	  "LLDProdCoreSubnetZA"	: { "CIDR" : "172.27.1.0/24" },
	  "LLDProdDBSubnetZA"	: { "CIDR" : "172.27.2.0/24" },
	  "LLDProdDMZSubnetZA"	: { "CIDR" : "172.27.3.0/24" },
	  "LLDProdWLSubnetZB"	: { "CIDR" : "172.27.4.0/24" },
	  "LLDProdCoreSubnetZB"	: { "CIDR" : "172.27.5.0/24" },
	  "LLDProdDBSubnetZB"	: { "CIDR" : "172.27.6.0/24" },
	  "LLDProdDMZSubnetZB"	: { "CIDR" : "172.27.7.0/24" },
	  "LLDUATEnv"			: { "CIDR" : "172.27.16.0/20" },
	  "LLDUATWLSubnetZA"	: { "CIDR" : "172.27.16.0/24" },
	  "LLDUATCoreSubnetZA"	: { "CIDR" : "172.27.17.0/24" },
	  "LLDUATDBSubnetZA"	: { "CIDR" : "172.27.18.0/24" },
	  "LLDUATDMZSubnetZA"	: { "CIDR" : "172.27.19.0/24" },
	  "LLDUATWLSubnetZB"	: { "CIDR" : "172.27.20.0/24" },
	  "LLDUATCoreSubnetZB"	: { "CIDR" : "172.27.21.0/24" },
	  "LLDUATDMZSubnetZB"	: { "CIDR" : "172.27.22.0/24" },
	  "LLDDevEnv"     		: { "CIDR" : "172.27.32.0/20" },
	  "LLDDevWLSubnet"		: { "CIDR" : "172.27.32.0/24" },
	  "LLDDevCoreSubnet"	: { "CIDR" : "172.27.33.0/24" },
	  "LLDDevDBSubnet"		: { "CIDR" : "172.27.34.0/24" },
	  "LLDDevDMZSubnet"     : { "CIDR" : "172.27.35.0/24" },
      "LLDDevWLSubnetZB"	: { "CIDR" : "172.27.36.0/24" },
	  "LLDSTEnv"     		: { "CIDR" : "172.27.48.0/20" },
	  "LLDSTWLSubnet"		: { "CIDR" : "172.27.48.0/24" },
	  "LLDSTCoreSubnet"		: { "CIDR" : "172.27.49.0/24" },
	  "LLDSTDBSubnet"		: { "CIDR" : "172.27.50.0/24" },
	  "LLDSTDMZSubnet"	    : { "CIDR" : "172.27.51.0/24" },
	  "LLDA1MEnv"			: { "CIDR" : "172.27.64.0/24" },
	  "LLDA1MCoreSubnetZA"	: { "CIDR" : "172.27.64.0/26" },
	  "LLDA1MDMZSubnetZA"	: { "CIDR" : "172.27.64.64/26" },
	  "LLDA1MCoreSubnetZB"	: { "CIDR" : "172.27.64.128/26" },
	  "LLDA1MDMZSubnetZB"	: { "CIDR" : "172.27.64.192/26" },
	  "LLDA2MEnv"			: { "CIDR" : "172.27.65.0/24" },
	  "LLDA2MCoreSubnetZA"	: { "CIDR" : "172.27.65.0/26" },
	  "LLDA2MDMZSubnetZA"	: { "CIDR" : "172.27.65.64/26" },
	  "LLDA2MCoreSubnetZB"	: { "CIDR" : "172.27.65.128/26" },
	  "LLDA2MDMZSubnetZB"	: { "CIDR" : "172.27.65.192/26" }
	}

  },

  "Resources" : {

    "DevEnv" : {
      "Metadata" : {
        "Comment1" : "//------------------------------Dev Networking Resources---------------------------------"
      },
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Fn::FindInMap" : [ "CIDRBlocks", "LLDDevEnv", "CIDR" ]},
		 "EnableDnsSupport" : "true",
		 "EnableDnsHostnames" : "true",
        "Tags" : [
                   {"Key" : "ApplicationID", "Value" : "LLAPP" },
                   {"Key" : "Environment", "Value" : "DEV" },
        		   {"Key":"Name", "Value" : { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "_VPC"]]}}
         ]
      }
     },

    "VPCFlowLogRole" : {
      "Type"  : "AWS::IAM::Role",
      "Properties" : {
          "AssumeRolePolicyDocument" : {
              "Statement" : [ {
                  "Effect" : "Allow",
                  "Principal" : {
                      "Service" : [ "vpc-flow-logs.amazonaws.com" ]
                  },
                  "Action" : [ "sts:AssumeRole" ]
              } ]
          },
          "Path" : "/service-role/"
      }
    },

    "VPCFlowLogRolePolicy" : {
        "Type" : "AWS::IAM::Policy",
        "Properties" : {
            "PolicyName" : "LLDDev_FlowLogsPolicy",
            "PolicyDocument" : {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "",
                  "Effect": "Allow",
                  "Action": ["logs:CreateLogGroup","logs:CreateLogStream","logs:PutLogEvents","logs:DescribeLogGroups","logs:DescribeLogStreams"],
                  "Resource": ["*"]
                }
              ]
            },
            "Roles" : [ { "Ref" : "VPCFlowLogRole" } ]
        }
    },

    "A2MEnvFlowLog" : {
      "Type" : "AWS::EC2::FlowLog",
      "Properties" : {
        "DeliverLogsPermissionArn" : { "Fn::GetAtt" : ["VPCFlowLogRole", "Arn"] },
        "LogGroupName" : "LLDDevVPCLogs",
        "ResourceId" : { "Ref" : "DevEnv" },
        "ResourceType" : "VPC",
        "TrafficType" : "ALL"
      }
    },


    "DevDMZSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "DevEnv" },
        "AvailabilityZone" : {"Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ]},
        "CidrBlock" : { "Fn::FindInMap" : [ "CIDRBlocks", "LLDDevDMZSubnet", "CIDR" ]},
        "Tags" : [
                   {"Key" : "ApplicationID", "Value" : "LLAPP" },
                   {"Key" : "Environment", "Value" : "DEV" },
        		   {"Key":"Name", "Value" : { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "_DevDMZSubnet"]]}}

        ]
      }
    },

    "DevWLSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "DevEnv" },
        "AvailabilityZone" : {"Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ]},
        "CidrBlock" : { "Fn::FindInMap" : [ "CIDRBlocks", "LLDDevWLSubnet", "CIDR" ]},
        "Tags" : [
                   {"Key" : "ApplicationID", "Value" : "LLAPP" },
                   {"Key" : "Environment", "Value" : "DEV" },
        		   {"Key":"Name", "Value" : { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "_DevWLSubnet"]]}}

        ]
      }
    },

    "DevWLSubnetZB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "DevEnv" },
        "AvailabilityZone" : {"Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ]},
        "CidrBlock" : { "Fn::FindInMap" : [ "CIDRBlocks", "LLDDevWLSubnetZB", "CIDR" ]},
        "Tags" : [
                   {"Key" : "ApplicationID", "Value" : "LLAPP" },
                   {"Key" : "Environment", "Value" : "DEV" },
        		   {"Key":"Name", "Value" : { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "_DevWLSubnetZB"]]}}

        ]
      }
    },

	"DevCoreSubnet" : {
	  "Type" : "AWS::EC2::Subnet",
	  "Properties" : {
	    "VpcId" : { "Ref" : "DevEnv" },
        "AvailabilityZone" : {"Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ]},
        "CidrBlock" : { "Fn::FindInMap" : [ "CIDRBlocks", "LLDDevCoreSubnet", "CIDR" ]},
        "Tags" : [
                   {"Key" : "ApplicationID", "Value" : "LLAPP" },
                   {"Key" : "Environment", "Value" : "DEV" },
        		   {"Key":"Name", "Value" : { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "_DevCoreSubnet"]]}}

        ]
      }
    },

    "DevDBSubnet" : {
	  "Type" : "AWS::EC2::Subnet",
	  "Properties" : {
	    "VpcId" : { "Ref" : "DevEnv" },
        "AvailabilityZone" : {"Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ]},
        "CidrBlock" : { "Fn::FindInMap" : [ "CIDRBlocks", "LLDDevDBSubnet", "CIDR" ]},
        "Tags" : [
                   {"Key" : "ApplicationID", "Value" : "LLAPP" },
                   {"Key" : "Environment", "Value" : "DEV" },
        		   {"Key":"Name", "Value" : { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "_DevDBSubnet"]]}}

        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
                   {"Key" : "ApplicationID", "Value" : "LLAPP" },
                   {"Key" : "Environment", "Value" : "DEV" },
        		   {"Key":"Name", "Value" : { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "_InternetGateway"]]}}
        ]
      }
    },

    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "DevEnv" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "PublicRouteTable" : {
      "Metadata" : {
        "Comment1" : "//------------------------------Route Tables---------------------------------"
      },
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "DevEnv"},
        "Tags" : [
                   {"Key" : "ApplicationID", "Value" : "LLAPP" },
                   {"Key" : "Environment", "Value" : "DEV" },
        		   {"Key":"Name", "Value" : { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "_PublicRouteTable"]]}}

        ]
      }
    },

    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "DMZSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DevDMZSubnet" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PrivateRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "DevEnv"},
        "Tags" : [
                   {"Key" : "ApplicationID", "Value" : "LLAPP" },
                   {"Key" : "Environment", "Value" : "DEV" },
        		   {"Key":"Name", "Value" : { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "_PrivateRouteTable"]]}}
        ]
      }
    },

    "PrivateRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATDevice" }
      }
    },

    "DevWLRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DevWLSubnet" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

    "DevWLZBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DevWLSubnetZB" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

	"DevCoreSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DevCoreSubnet" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

  "DevDBSubnetSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DevDBSubnet" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

"PublicNetworkAcl" : {
      "Metadata" : {
        "Comment1" : "//------------------------------Network Access Control Lists---------------------------------"
      },
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "DevEnv"},
        "Tags" : [
                   {"Key" : "ApplicationID", "Value" : "LLAPP" },
                   {"Key" : "Environment", "Value" : "DEV" },
        		   {"Key":"Name", "Value" : { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "_PublicNACL"]]}}

        ]
      }
    },

    "InboundLLDAWSPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Fn::FindInMap" : [ "CIDRBlocks", "LLDAWS", "CIDR" ]},
        "PortRange" : {"From" : "0", "To" : "65535"}
      }
    },

    "InboundSSHPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
        "RuleNumber" : "110",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "22", "To" : "22"}
      }
    },

    "InboundICMPPublicAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
        "RuleNumber" : "200",
        "Protocol" : "1",
        "Icmp" : {"Code" : -1,"Type" : -1},
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Fn::FindInMap" : [ "CIDRBlocks", "LLDAWS", "CIDR" ]}
      }
    },

    "InboundEphemeralPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
        "RuleNumber" : "300",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "32768", "To" : "61000"}
      }
    },

    "OutBoundPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
        "RuleNumber" : "90",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "0", "To" : "65535"}
      }
    },

    "OutBoundICMPPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
        "RuleNumber" : "200",
        "Protocol" : "1",
        "Icmp" : {"Code" : -1,"Type" : -1},
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0"
      }
    },

    "DMZSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DevDMZSubnet" },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "PrivateNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "DevEnv"},
        "Tags" : [
                   {"Key" : "ApplicationID", "Value" : "LLAPP" },
                   {"Key" : "Environment", "Value" : "DEV" },
        		   {"Key":"Name", "Value" : { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "_PrivateNACL"]]}}

        ]
      }
    },

   "InboundPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Fn::FindInMap" : [ "CIDRBlocks", "LLDAWS", "CIDR" ]},
        "PortRange" : {"From" : "0", "To" : "65535"}
      }
    },

    "InboundICMPPrivateAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "200",
        "Protocol" : "1",
        "Icmp" : {"Code" : -1,"Type" : -1},
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Fn::FindInMap" : [ "CIDRBlocks", "LLDAWS", "CIDR" ]}
      }
    },

    "InboundEphemeralPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "300",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "32768", "To" : "61000"}
      }
    },

    "OutBoundPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "0", "To" : "65535"}
      }
    },
    "OutBoundICMPPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "200",
        "Protocol" : "1",
        "Icmp" : {"Code" : -1,"Type" : -1},
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0"
      }
    },

    "DevWLSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DevWLSubnet" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "DevWLZBSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DevWLSubnetZB" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "DevCoreSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DevCoreSubnet" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "DevDBSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DevDBSubnet" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "NATDevice" : {
      "Metadata" : {
        "Comment1" : "//------------------------------NAT Device---------------------------------"
      },
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "InstanceType" : { "Ref" : "NATInstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
        "SourceDestCheck" : "false",
        "ImageId" : { "Fn::FindInMap" : [ "AWSNATAMI", { "Ref" : "AWS::Region" }, "AMI" ]},
		"NetworkInterfaces": [ {
		  "AssociatePublicIpAddress": "true",
		  "DeviceIndex": "0",
		  "GroupSet": [{ "Ref" : "NATSecurityGroup" }],
		  "SubnetId": { "Ref" : "DevDMZSubnet" }
		} ],
		"BlockDeviceMappings" : [
		   {
              "DeviceName": "/dev/sda1",
			  "Ebs" : {
                  "VolumeSize" : "10",
                  "VolumeType" : "gp2",
                  "DeleteOnTermination" : true
              }
		   }
		],
        "Tags" : [
                   {"Key" : "ApplicationID", "Value" : "LLAPP" },
                   {"Key" : "Environment", "Value" : "DEV" },
        		   {"Key":"Name", "Value" : { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "_NATDevice"]]}}

        ]
      }
    },

    "NATSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable internal access to the NAT device",
        "VpcId" : { "Ref" : "DevEnv" },
        "SecurityGroupIngress" : [
           { "IpProtocol" : "tcp", "FromPort" : "0",  "ToPort" : "65535",  "CidrIp" : { "Fn::FindInMap" : [ "CIDRBlocks", "LLDAWS", "CIDR" ]}}
        ],
        "SecurityGroupEgress" : [
           { "IpProtocol" : "tcp", "FromPort" : "0",  "ToPort" : "65535",  "CidrIp" : "0.0.0.0/0"} ],
        "Tags" : [
                   {"Key" : "ApplicationID", "Value" : "LLAPP" },
                   {"Key" : "Environment", "Value" : "DEV" },
        		   {"Key":"Name", "Value" : { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "_NATSecurityGroup"]]}}

        ]
      }
    },

    "VPCPeeringConnection": {
      "Metadata" : {
        "Comment1" : "//------------------------------Peering with Management VPC---------------------------------"
      },
        "Type": "AWS::EC2::VPCPeeringConnection",
        "Properties": {
            "VpcId": {"Ref": "DevEnv"},
            "PeerVpcId": { "Fn::ImportValue" : {"Fn::Sub": "${ManagementStackName}-VPCID" } }
        }
    },

   "PeeringRoute1" : {
        "Type" : "AWS::EC2::Route",
        "Properties" : {
            "DestinationCidrBlock": { "Fn::FindInMap" : [ "CIDRBlocks", "LLDA2MEnv", "CIDR" ]},
            "RouteTableId" : { "Ref" : "PublicRouteTable" },
            "VpcPeeringConnectionId" : { "Ref" : "VPCPeeringConnection" }
        }
    },

   "PeeringRoute2" : {
        "Type" : "AWS::EC2::Route",
        "Properties" : {
            "DestinationCidrBlock": { "Fn::FindInMap" : [ "CIDRBlocks", "LLDA2MEnv", "CIDR" ]},
            "RouteTableId" : { "Ref" : "PrivateRouteTable" },
            "VpcPeeringConnectionId" : { "Ref" : "VPCPeeringConnection" }
        }
    },

    "PeeringRoute3" : {
        "Type" : "AWS::EC2::Route",
        "Properties" : {
            "DestinationCidrBlock": { "Fn::FindInMap" : [ "CIDRBlocks", "LLDDevEnv", "CIDR" ]},
            "RouteTableId" : { "Fn::ImportValue" : {"Fn::Sub": "${ManagementStackName}-PublicRouteTable" } },
            "VpcPeeringConnectionId" : { "Ref" : "VPCPeeringConnection" }
        }
    },

    "PeeringRoute4" : {
        "Type" : "AWS::EC2::Route",
        "Properties" : {
            "DestinationCidrBlock": { "Fn::FindInMap" : [ "CIDRBlocks", "LLDDevEnv", "CIDR" ]},
            "RouteTableId" : { "Fn::ImportValue" : {"Fn::Sub": "${ManagementStackName}-PrivateRouteTable" } },
            "VpcPeeringConnectionId" : { "Ref" : "VPCPeeringConnection" }
        }
    }

  },

  "Outputs" : {
   "VpcId" : {
      "Description": "VPC",
      "Value": { "Ref" : "DevEnv" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-VPCID" }}
    },
    "DevDMZSubnet" : {
      "Description" : "EnvSubnet ID",
      "Value" :  { "Ref" : "DevDMZSubnet" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-DevDMZSubnetID" }}
    },
    "DevWLSubnet" : {
      "Description" : "DevWLSubnet ID",
      "Value" :  { "Ref" : "DevWLSubnet" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-DevWLSubnetID" }}
    },
    "DevWLSubnetZB" : {
      "Description" : "DevWLSubnetZB ID",
      "Value" :  { "Ref" : "DevWLSubnetZB" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-DevWLSubnetZBID" }}
    },
	"DevCoreSubnet" : {
      "Description" : "DevCoreSubnet ID",
      "Value" :  { "Ref" : "DevCoreSubnet" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-DevCoreSubnetID" }}
    },
	"DevDBSubnet" : {
      "Description" : "DevDBSubnet ID",
      "Value" :  { "Ref" : "DevDBSubnet" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-DevDBSubnetID" }}
    },
    "PublicRouteTable":{
    	"Description" : "Route Table, exported to allow other peered VPCs to insert routes",
    	"Value" : { "Ref" : "PublicRouteTable" },
    	"Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PublicRouteTable" }}
    },
    "PrivateRouteTable":{
    	"Description" : "Route Table, exported to allow other peered VPCs to insert routes",
    	"Value" : { "Ref" : "PrivateRouteTable" },
    	"Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PrivateRouteTable" }}
    }
  }
}
